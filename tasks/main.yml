---
- name: main | Define 'minishift' hash as fact.
  set_fact:
     __ms: "{{ minishift_defaults | combine(minishift, recursive=True) }}"

- name: main | Check if Minishift binary exists in '{{ __ms.dir.local_bin }}'
  stat:
    path: "{{ __ms.dir.local_bin }}/minishift"
  register: minishift_cli

- name: main | Get the Minishift status of '{{ __ms.start_options.profile }}'.
  command: "minishift status --profile {{ __ms.start_options.profile }}"
  register: instance_status
  when: minishift_cli.stat is defined
  ignore_errors: yes

- name: main | Get the IP address of '{{ __ms.start_options.profile }}' instance.
  command: "minishift ip --profile {{ __ms.start_options.profile }}"
  register: ip_addr
  when: minishift_cli.stat is defined and instance_status.stdout | regex_search('Running')

- name: main | Defining the Minishift profile's regex and getting the IP Address.
  set_fact:
    minishift_profile_regex: "- {{ __ms.start_options.profile }}(.+)"
    instance_ip_address: "{{ ip_addr.stdout | default('') }}"

- name: main | Clean previous Minishift installation and generated files.
  include: clean.yml
  when: __ms.action_to_trigger in ['clean','fresh_install']

- name: main | Install/Deploy/Start Minishift.
  include: install.yml
  when: __ms.action_to_trigger in ['install','fresh_install']

- name: main | Show output.
  debug:
    var: minishift_start_output
  when: __ms.action_to_trigger in ['install','fresh_install']

- name: main | Post configurations.
  include: post.yml
  when: __ms.action_to_trigger in ['install','fresh_install'] and instance_ip_address != ''
